require 'telegram/bot'
require './secure.rb'
require './vika_phrases.rb'
require './nastya_phrases.rb'
require './general_phrases.rb'

def send_message(bot, chat_id, text)
  bot.api.send_message(
    chat_id:chat_id,
    text: text
  )
end

def answer_to_lovely_girl(bot, chat_id, text, owner_chat_id, owner_text)
  send_message(bot, chat_id, text)
  send_message(bot, owner_chat_id, owner_text)
end

def bot_activity(bot, message)
  case message.from.username
  when VIKA_USERNAME
    text = (PHRASES_FOR_VIKA + GENERAL_PHRASES).sample
    answer_to_lovely_girl(bot, message.chat.id, text, ARSENIJ_ID, "–¢–æ—Ä—è –∂–¥—ë—Ç, –¢–æ—Ä—è –ø–ª–∞—á–µ—Ç\n–ï—ë –ª—é–±–∏–º—ã–π –≥–æ–≤–æ—Ä–∏—Ç: #{text}")
  when NASTYA_USERNAME
    text = (PHRASES_FOR_NASTYA + GENERAL_PHRASES).sample
    answer_to_lovely_girl(bot, message.chat.id, text, DENIS_ID, "–ù–∞—Å—Ç—é—à–∫–∞-–°–ø–ª—é—à–∫–∞ —Å–∫—É—á–∞–µ—Ç üíü\n–ï–µ –ø–æ—Ä–∞–¥–æ–≤–∞–ª–æ: #{text}")
  when DENIS_USERNAME
    send_message(bot, message.chat.id, '–û–±–æ–∂–∞—é –≤–∞—Å, –º–æ–π —Ö–æ–∑—è–∏–Ω')
    send_message(bot, message.chat.id, "–í–∞—à–µ–π –ª—é–±–∏–º–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ #{(PHRASES_FOR_NASTYA + GENERAL_PHRASES).count} –ø—Ä–∏—è—Ç–Ω—ã—Ö —Ñ—Ä–∞–∑")
  when ARSENIJ_USERNAME
    send_message(bot, message.chat.id, '–í–∞—Å—Å–∞–ø, –ù–∏–≥–≥–∞')
    send_message(bot, message.chat.id, "–í–∞—à–µ–π –ª—é–±–∏–º–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ #{(PHRASES_FOR_VIKA + GENERAL_PHRASES).count} –ø—Ä–∏—è—Ç–Ω—ã—Ö —Ñ—Ä–∞–∑")
  else
    send_message(bot, message.chat.id, '–¢–µ–±—è –Ω–∏–∫—Ç–æ –Ω–µ –ª—é–±–∏—Ç, –ø–æ—à–µ–ª –Ω–∞—Ö—É–π –æ—Ç—Å—é–¥–∞. –£–º—Ä–∏.')
  end
end

Telegram::Bot::Client.run(TOKEN) do |bot|
  bot.listen do |message|
    bot_activity(bot, message)
  end
end
